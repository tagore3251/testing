- name: Demonstrate ansible.builtin.shell and ansible.builtin.command
  hosts: local
  connection: local
  become: yes
  tasks:
    # 1️-Using 'command' to run a simple command
    - name: Get system uptime using 'command'
      ansible.builtin.command: uptime  # Executes the uptime command
      register: uptime_output  # Stores output in a variable

    - name: Display system uptime
      ansible.builtin.debug:
        msg: "System uptime: {{ uptime_output }}"  # Prints uptime result

    # 2️-Using 'shell' to run a more complex shell command
    - name: Get the last 5 logged-in users using 'shell'
      ansible.builtin.shell: "last -n 5"  # Uses shell syntax for listing last logins
      register: last_users  

    - name: Display last logged-in users
      ansible.builtin.debug:
        msg: "Last logged-in users:\n{{ last_users }}"  # Prints login details

    # 3️-Using 'command' for a safer execution (avoiding shell parsing)
    - name: List files in /tmp using 'command'
      ansible.builtin.command: ls -l /tmp  # Lists files without shell expansion
      register: tmp_files  # Stores output

    - name: Show files in /tmp
      ansible.builtin.debug:
        msg: "Files in /tmp:\n{{ tmp_files}}"  # Prints list of files

    # 4️-Using 'shell' when necessary (for pipes, redirections, etc.)
    - name: Find all .log files in /var/log using 'shell'
      ansible.builtin.shell: "find /var/log -name '*.log' 2>/dev/null'"  # Uses shell expansion with wildcard
      register: log_files  # Stores output

    - name: Show all log files found
      ansible.builtin.debug:
        msg: "Log files found:\n{{ log_files }}"  # Prints all found log files

- name: Find log files while ignoring errors
  ansible.builtin.shell: "find /var/log -name '*.log' 2>/dev/null"
  register: log_files