- name: Ansible Filters (or) Functions
  hosts: local
  connection: local
  tasks:

    # 1️-Handling Undefined Variable
    - name: Handle an undefined variable using default filter
      ansible.builtin.debug:
        msg: "Hello, {{ person | default('Tagore') }}!"  # If 'person' is undefined, default to 'Tagore'

    # 2-Jinja2 Filters (Similar to Functions)
    - name: Convert text from uppercase to lowercase
      tags:
      - uppertolower
      vars:
        name: "TAGORE"
      ansible.builtin.debug:
        msg: "Lowercase Name: {{ name | lower }}"

    - name: Convert text from lowercase to uppercase
      vars:
        name: "tagore"
      ansible.builtin.debug:
        msg: "Uppercase Name: {{ name | upper }}"

    - name: Calculate sum of numbers using Jinja2 filter
      vars:
        numbers: [51, 59]
      ansible.builtin.debug:
        msg: "Sum: {{ numbers | sum }}"  # Adds all numbers in the 'numbers' list

    # 3-Convert String into a List
    - name: Convert comma-separated string into a list
      vars:
        fruits: "apple, banana, orange"  # String containing fruit names
      ansible.builtin.debug:
        msg: "Fruit List: {{ fruits | split(',') }}"  # Splits the string into a list

    # 4-Convert Dictionary (Map) into List
    - name: Convert dictionary into a list format
      vars:
        course:
          name: Ansible
          duration: 20hrs
      ansible.builtin.debug:
        msg: "Course details as a list: {{ course | dict2items }}" 

    # 4️-Convert List into Dictionary (Map)
    - name: Convert list of key-value pairs into a dictionary
      vars:
        course:
        - { key: "name", value: "Ansible" }
        - { key: "duration", value: "20hrs" }
      ansible.builtin.debug:
        msg: "Course details in dictionary format: {{ course | items2dict }}"

    # 5-Print Minimum and Maximum Values in a List
    - name: Find minimum and maximum numbers in a list
      vars:
        numbers: [51,59,18,100,999,01]  # List of numbers
      ansible.builtin.debug:
        msg: "Minimum Number: {{ numbers | min }}, Maximum Number: {{ numbers | max }}"

    # 6-Validate IP Address Format
    - name: Check if an IP address is valid
      vars:
        ip: "172.31.22.240"
      ansible.builtin.debug:
        msg: "Is '{{ ip }}' a valid IP? {{ ip | ansible.utils.ipaddr }}"